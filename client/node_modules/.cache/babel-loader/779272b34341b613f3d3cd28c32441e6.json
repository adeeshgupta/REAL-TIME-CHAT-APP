{"ast":null,"code":"var _jsxFileName = \"/Users/adeeshgupta/Desktop/Adeesh/Projects/whatsapp/client/src/components/ConversationComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SearchContainer, SearchInput } from \"./ContactListComponent\";\nimport Picker from \"emoji-picker-react\";\nimport { messagesList } from \"../mockData\";\nimport httpManager from \"../managers/httpManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 3;\n  height: 100%;\n  width: 100%;\n  background: #f6f7f8;\n`;\n_c = Container;\nconst ProfileHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  padding: 10px;\n  align-items: center;\n`;\n_c2 = ProfileHeader;\nconst ProfileImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\n_c3 = ProfileImage;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: auto;\n  background: #e5ddd6;\n`;\n_c4 = MessageContainer;\nconst MessageDiv = styled.div`\n  display: flex;\n  justify-content: ${props => props.isYours ? \"flex-end\" : \"flex-start\"};\n  margin: 5px 15px;\n`;\n_c5 = MessageDiv;\nconst Message = styled.div`\n  background: ${props => props.isYours ? \"#daf8cb\" : \"white\"};\n  padding: 8px 10px;\n  border-radius: 4px;\n  max-width: 50%;\n  color: #303030;\n  font-size: 14px;\n`;\n_c6 = Message;\nconst ChatBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f0f0f0;\n  padding: 10px;\n  align-items: center;\n  bottom: 0;\n`;\n_c7 = ChatBox;\nconst EmojiImage = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  opacity: 0.4;\n  cursor: pointer;\n`;\n_c8 = EmojiImage;\n\nfunction ConversationComponent(props) {\n  _s();\n\n  const {\n    selectedChat\n  } = props;\n  const [text, setText] = useState(\"\");\n  const [pickerVisible, togglePicker] = useState(false);\n  const [messageList, setMessageList] = useState([]);\n  useEffect(() => {\n    setMessageList(selectedChat.channelData.messages);\n  }, [selectedChat]);\n\n  const onEnterPress = async event => {\n    let channelId = selectedChat.channelData._id;\n\n    if (event.key === \"Enter\") {\n      if (!messageList || !messageList.length) {\n        const channelUsers = [{\n          email: userInfo.email,\n          name: userInfo.name,\n          profilePic: userInfo.imageUrl\n        }, {\n          email: selectedChat.otherUser.email,\n          name: selectedChat.otherUser.name,\n          profilePic: selectedChat.otherUser.profilePic\n        }];\n        const channelResponse = await httpManager.createChannel({\n          channelUsers\n        });\n        channelId = channelResponse.data.responseData._id;\n      }\n\n      refreshContactList();\n      const messages = [...messageList];\n      const msgReqData = {\n        text,\n        senderEmail: userInfo.email,\n        addedOn: new Date().getTime()\n      };\n      const messageResponse = await httpManager.sendMessage({\n        channelId,\n        messages: msgReqData\n      });\n      messages.push(msgReqData);\n      setMessageList(messages);\n      setText(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      children: /*#__PURE__*/_jsxDEV(ProfileInfo, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n          src: selectedChat.otherUser.profilePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactName, {\n          children: selectedChat.otherUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: messageList === null || messageList === void 0 ? void 0 : messageList.map(messageData => /*#__PURE__*/_jsxDEV(MessageDiv, {\n        isYours: messageData.senderEmail === userInfo.email,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          isYours: messageData.senderEmail === userInfo.email,\n          children: [messageData.text]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n        children: [pickerVisible && /*#__PURE__*/_jsxDEV(Picker, {\n          pickerStyle: {\n            position: \"absolute\",\n            bottom: \"60px\"\n          },\n          onEmojiClick: (e, emoji) => {\n            setText(text + emoji.emoji);\n            togglePicker(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EmojiImage, {\n          src: \"/whatsapp-clone/data.svg\",\n          onClick: () => togglePicker(pickerVisible => !pickerVisible)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          placeholder: \"Type a message\",\n          value: text,\n          onKeyDown: onEnterPress,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConversationComponent, \"lD4w3c+f15VdAp+itfsiRAvlBS4=\");\n\n_c9 = ConversationComponent;\nexport default ConversationComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ProfileHeader\");\n$RefreshReg$(_c3, \"ProfileImage\");\n$RefreshReg$(_c4, \"MessageContainer\");\n$RefreshReg$(_c5, \"MessageDiv\");\n$RefreshReg$(_c6, \"Message\");\n$RefreshReg$(_c7, \"ChatBox\");\n$RefreshReg$(_c8, \"EmojiImage\");\n$RefreshReg$(_c9, \"ConversationComponent\");","map":{"version":3,"names":["React","useEffect","useState","styled","SearchContainer","SearchInput","Picker","messagesList","httpManager","Container","div","ProfileHeader","ProfileImage","img","MessageContainer","MessageDiv","props","isYours","Message","ChatBox","EmojiImage","ConversationComponent","selectedChat","text","setText","pickerVisible","togglePicker","messageList","setMessageList","channelData","messages","onEnterPress","event","channelId","_id","key","length","channelUsers","email","userInfo","name","profilePic","imageUrl","otherUser","channelResponse","createChannel","data","responseData","refreshContactList","msgReqData","senderEmail","addedOn","Date","getTime","messageResponse","sendMessage","push","map","messageData","position","bottom","e","emoji","target","value"],"sources":["/Users/adeeshgupta/Desktop/Adeesh/Projects/whatsapp/client/src/components/ConversationComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SearchContainer, SearchInput } from \"./ContactListComponent\";\nimport Picker from \"emoji-picker-react\";\nimport { messagesList } from \"../mockData\";\nimport httpManager from \"../managers/httpManager\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 3;\n  height: 100%;\n  width: 100%;\n  background: #f6f7f8;\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  padding: 10px;\n  align-items: center;\n`;\n\n\nconst ProfileImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: auto;\n  background: #e5ddd6;\n`;\n\nconst MessageDiv = styled.div`\n  display: flex;\n  justify-content: ${(props) => (props.isYours ? \"flex-end\" : \"flex-start\")};\n  margin: 5px 15px;\n`;\n\nconst Message = styled.div`\n  background: ${(props) => (props.isYours ? \"#daf8cb\" : \"white\")};\n  padding: 8px 10px;\n  border-radius: 4px;\n  max-width: 50%;\n  color: #303030;\n  font-size: 14px;\n`;\n\nconst ChatBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f0f0f0;\n  padding: 10px;\n  align-items: center;\n  bottom: 0;\n`;\n\nconst EmojiImage = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  opacity: 0.4;\n  cursor: pointer;\n`;\n\nfunction ConversationComponent(props) {\n\n  const { selectedChat } = props;\n  const [text, setText] = useState(\"\");\n  const [pickerVisible, togglePicker] = useState(false);\n  const [messageList, setMessageList] = useState([]);\n\n  useEffect(() => {\n    setMessageList(selectedChat.channelData.messages);\n  }, [selectedChat]);\n\n  const onEnterPress = async (event) => {\n    let channelId = selectedChat.channelData._id;\n    if (event.key === \"Enter\") {\n      if (!messageList || !messageList.length) {\n        const channelUsers = [\n          {\n            email: userInfo.email,\n            name: userInfo.name,\n            profilePic: userInfo.imageUrl,\n          },\n          {\n            email: selectedChat.otherUser.email,\n            name: selectedChat.otherUser.name,\n            profilePic: selectedChat.otherUser.profilePic,\n          },\n        ];\n        const channelResponse = await httpManager.createChannel({\n          channelUsers,\n        });\n        channelId = channelResponse.data.responseData._id;\n      }\n      refreshContactList();\n      const messages = [...messageList];\n      const msgReqData = {\n        text,\n        senderEmail: userInfo.email,\n        addedOn: new Date().getTime(),\n      };\n      const messageResponse = await httpManager.sendMessage({\n        channelId,\n        messages: msgReqData,\n      });\n      messages.push(msgReqData);\n      setMessageList(messages);\n      setText(\"\");\n    }\n  };\n\n  return (\n    <Container>\n      <ProfileHeader>\n        <ProfileInfo>\n          <ProfileImage src={selectedChat.otherUser.profilePic} />\n          <ContactName>{selectedChat.otherUser.name}</ContactName>\n        </ProfileInfo>\n      </ProfileHeader>\n      <MessageContainer>\n        {messageList?.map((messageData) => (\n          <MessageDiv isYours={messageData.senderEmail === userInfo.email}>\n            <Message isYours={messageData.senderEmail === userInfo.email}>\n              {[messageData.text]}\n            </Message>\n          </MessageDiv>\n        ))}\n      </MessageContainer>\n\n      <ChatBox>\n        <SearchContainer>\n          {pickerVisible && (\n            <Picker\n              pickerStyle={{ position: \"absolute\", bottom: \"60px\" }}\n              onEmojiClick={(e, emoji) => {\n                setText(text + emoji.emoji);\n                togglePicker(false);\n              }}\n            />\n          )}\n          <EmojiImage\n            src={\"/whatsapp-clone/data.svg\"}\n            onClick={() => togglePicker((pickerVisible) => !pickerVisible)}\n          />\n          <SearchInput\n            placeholder=\"Type a message\"\n            value={text}\n            onKeyDown={onEnterPress}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </SearchContainer>\n      </ChatBox>\n    </Container>\n  );\n}\n\nexport default ConversationComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}